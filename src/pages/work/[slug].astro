---
import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import Pill from "../../components/Pill.astro";
import ProjectSection from "../../components/ProjectSection.astro";
import { projects } from "../../content/_projects";
import BaseLayout from "../../layouts/BaseLayout.astro";

export const getStaticPaths = () =>
  projects.map(({ slug }) => ({
    params: { slug },
  }));

const { slug } = Astro.params;
const project = projects.find(proj => proj.slug === slug);
if (!project) throw new Error("GAH");
---

<main>
  <BaseLayout
    title={project.title + " | Allison Harrison"}
    description={project.teaser}
  >
    <div class="stack gap-20">
      <div class="stack gap-10">
        <header>
          <div class="wrapper stack gap-2">
            <a class="flex items-center" href="/work/"
              ><Icon icon="arrow-left" /><span class="ml-2">Work</span></a
            >
            <Hero title={project.title} align="start">
              <p class="description">{project.teaser}</p>
              <div class="details">
                <div class="tags">
                  {
                    project.sections.map(t => (
                      <div
                        class="clickable-pill cursor-pointer"
                        data-section={t}
                      >
                        <Pill>{t}</Pill>
                      </div>
                    ))
                  }
                </div>
              </div>
            </Hero>
          </div>
        </header>
        <main class="wrapper">
          {
            project.sectionDetails.map(section => (
              <ProjectSection section={section} />
            ))
          }
        </main>
      </div>
      <ContactCTA />
    </div>
  </BaseLayout>
</main>

<script is:inline>
  const pills = document.querySelectorAll(".clickable-pill");
  pills.forEach(element => {
    const section = element.dataset.section;
    element.addEventListener("click", () => {
      const el = document.getElementById(section);
      el.scrollIntoView({ behavior: "smooth" });
    });
  });
</script>

<style>
  header {
    padding-bottom: 2.5rem;
    border-bottom: 1px solid var(--gray-800);
  }

  .back-link {
    display: none;
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .description {
    font-size: var(--text-lg);
    max-width: 54ch;
  }

  .content {
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
  }

  .back-link,
  .content :global(a) {
    text-decoration: 1px solid underline transparent;
    text-underline-offset: 0.25em;
    transition: text-decoration-color var(--theme-transition);
  }

  .back-link:hover,
  .back-link:focus,
  .content :global(a:hover),
  .content :global(a:focus) {
    text-decoration-color: currentColor;
  }

  @media (min-width: 50em) {
    .back-link {
      display: block;
      align-self: flex-start;
    }

    .details {
      flex-direction: row;
      gap: 2.5rem;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }
  }
</style>
